Exercise 1 : No JSX
Instructions
    Create an element without JSX and render it. The element should be an <h1> with the content “I do not use JSX”
                                App.js

function App() {
  return (
    <div className="App">
      <h1>
    I do not use JSX
  </h1>

    </div>
  );
}

Exercise 1 : No JSX ____________________________________ END


Exercise 2: With JSX
Instructions
    Display a “Hello World!” message on the page.
    Create a constant variable with JSX const myelement = <h1>I Love JSX!</h1>;, and render it on the page.
    Create a constant variable named sum, which value is 5 + 5. Render on the page, the following sentence "React is <sum> times better with JSX"
                                                index.js
                                   
const myelement = <h1>I Love JSX!</h1>;
const sum = 5+5;
root.render(
  <div>
    <h1>Hello World</h1>
    {myelement}
    <h2>{`React is ${sum} times better with JSX`}</h2>
  </div>
);

Exercise 2: With JSX ____________________________________ END


Exercise 3 : Object
Instructions
    Using the following object:
        const user = {
        firstName: 'Bob',
        lastName: 'Dylan',
        favAnimals : ['Horse','Turtle','Elephant','Monkey']
        };
    In the React App, render the first name and the last name of the user in two <h3>.
    In a separate Javascript file, create a new Component called UserFavoriteColors. 
    Use props to pass the fav_animals array to the UserFavoriteColors component.
    In the UserFavoriteColors component, use the map function to create a new array of <li>‘s.
    Each <li> corresponds to one animal from the fav_animals array.
    Display the <li>‘s. Tip : You can use the second parameter of the map function as a key to uniquely identify each HTML item

                    App.js

    function App() {
  const user = {
    firstName: 'Bob',
    lastName: 'Dylan',
    favAnimals : ['Horse','Turtle','Elephant','Monkey']
    };
  return (
    <div className="App">
      <h3>{user.firstName}</h3>
      <h3>{user.lastName}</h3>
      {user.favAnimals.map((item,index) =>{
        return <UserFavoriteColors key={index} info={item}/>
      })}
      
    </div>
  );
}

                User_favorite_colors.js

const UserFavoriteColors = (props) =>{
    const fav_animals = props.info
     return(
         <div>
            {/* {console.log(fav_animals)} */}
            <li>{fav_animals}</li>
         </div>
     )
 }
 
 export default UserFavoriteColors

 Exercise 3 : Object____________________________________ END


Exercise 4 : HTML Tags In React
Instructions
PART I:
    In a separate Javascript file, create a new Component called Exercise4 that contains some HTML tags.
    create a <h1> tag and set its color to red, and the background color to lightblue.
    create a paragraph, a link, a form, an image and a list.
    Import Exercise4 to the App.js file and display it.


                        Exercise_4.js
      function Exercise_4(){
          return(
              <div>
                  <h1 style={{color:"red", backgroundColor:"lightblue"}}>My h1 tag</h1>
                  <p>my paragraph</p>
                  <a href="https://www.google.com">Google</a>
                  <form> 
                      <label>My form: </label>
                      <input type="text"></input>
                      <input type="Submit" value={"Submit"}></input>
                  </form>
                  <img src={"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRqs55CRpuvjyEmlA8-kMsyc1kD_iXnIsjTVA&usqp=CAU"}/>
                  <ul>
                      <li>Coffee</li>
                      <li>Tea</li>
                      <li>Milk</li>
                  </ul>
              </div>
          )
      }

      export default Exercise_4

PART II:

  Add the below object to the component Exercise4. Use this object to style the <h1>.
      const style_header = {
      color: "white",
      backgroundColor: "DodgerBlue",
      padding: "10px",
      fontFamily: "Arial"
    };

PART III:
    Create a new css file named Exercise4.css and import it in your Exercise4 component.
    Add the following CSS properties to the CSS file, and apply them to the paragraph tag:
        .para {
        background-color: #282c34;
        color: white;
        padding: 40px;
        font-family: Arial;
        text-align: center;
      }

Exercise 4 : HTML Tags In React               END

s